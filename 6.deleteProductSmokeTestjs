import http from 'k6/http'
import {check, sleep} from 'k6'
import { Counter } from 'k6/metrics'
import { randomIntBetween, randomString } from 'https://jslib.k6.io/k6-utils/1.2.0/index.js';
import createProduct from './2.createNewProductSmokeTest.js';

export const options = {
    vus:1,
    duration: '30s',
}

let httpError = new Counter('errorCounter')

export default function deleteProduct() {
    const baseUrl = 'https://api.escuelajs.co/api/v1/';
     let createProductResponse = createProduct ();
    let newProductId = createProductResponse.productId;
        let resDeleteProductId = http.del(`${baseUrl}products/${newProductId}`, {
            tags: {
                product:'delete'
            }
        });
        let productDeleteddID = resDeleteProductId.json().id
        sleep(randomIntBetween(1,5))

        if(resDeleteProductId.error){
            httpError.add(1, {product: 'delete'}),
            check(resDeleteProductId, {
                'isStatus400': r => r.status === 400,
            },{product: 'delete'})
            
        }else {
            check(resDeleteProductId, {
                'isStatus200': r => r.status === 200,
            },
                {product: 'delete'}
            )
        }
    
        let resGetProductDeletedInTheList = http.get(`${baseUrl}products`, {
                tags: {
                    product:'isProductDeletedInTheList',
                
                }
            });

            sleep(randomIntBetween(1,5))  

            if(resGetProductDeletedInTheList.error) {
                httpError.add(1);
                check(resGetProductDeletedInTheList,{
                    'isStatus400': r => r.status === 400
                }, {product:'isProductDeletedInTheList'})
            }else {
                check(resGetProductDeletedInTheList,{
                    'isStatus200': r => r.status === 200,
                    'producDeletedId': r => !r.json().some(p => p.id === newProductId)
                },{product:'isProductDeletedInTheList'})
            }
               
}